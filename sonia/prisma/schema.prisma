// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chat {
  id        String    @id @default(uuid())
  title     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]
}

enum ApiType {
  OPENAI
  ANTHROPIC
}

model LLMApi {
  id        String   @id @default(uuid())
  name      String   @unique
  url       String
  model     String
  apiKey    String?
  apiType   ApiType  @default(OPENAI)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Config    Config[]
}

model Config {
  id          String @id @default(uuid())
  environment String @unique
  llmApiId    String
  llmApi      LLMApi @relation(fields: [llmApiId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ASSISTANT
}

model Message {
  id        String   @id @default(uuid())
  role      Role     @default(USER)
  content   String
  chatId    String
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
